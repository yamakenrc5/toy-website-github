name: deploy-toy-website-test
concurrency: toy-company

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCEGROUP_NAME: ToyWebsite
  ENVIRONMENT_TYPE: Test
  # ENVIRONMENT_NEW: Website
  TEMPLATE: deploy/main.bicep
  DEPLOYMENT_Mode: Validate
  ADDITIONAL_ARG: --what-if


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run Bicep linter
      run: az bicep build --file ${{env.TEMPLATE}}

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        creds: ${{ secrets.AZURE_UNATTENDED }}
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ${{env.TEMPLATE}}
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
        deploymentMode: ${{env.DEPLOYMENT_Mode}}
  preview:
        runs-on: ubuntu-latest
        needs: [lint, validate]
        steps:
        - uses: actions/checkout@v3
        - uses: azure/login@v1
          name: Sign in to Azure
          with:
            creds: ${{ secrets.AZURE_UNATTENDED }}
        - uses: azure/arm-deploy@v1
          name: Run what-if
          with:
            failOnStdErr: false
            resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
            template: ${{env.TEMPLATE}}
            parameters: >
              environmentType=${{ env.ENVIRONMENT_TYPE }}
            additionalArguments:  ${{env.ADDITIONAL_ARG}}  #--what-if
  deploy:
    runs-on: ubuntu-latest
    environment: Website
    needs: [lint, validate,preview]
    outputs:
      appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName }}  
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        creds: ${{ secrets.AZURE_UNATTENDED }}
    - uses: azure/arm-deploy@v1
      id: deploy
      name: Deploy website
      with:
        failOnStdErr: false
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ${{env.TEMPLATE}}
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }}
  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v3
    - run: |
        $container = New-PesterContainer `
          -Path 'deploy/Website.Tests.ps1' `
          -Data @{ HostName = '${{needs.deploy.outputs.appServiceAppHostName}}' }
        Invoke-Pester `
          -Container $container `
          -CI
      name: Run smoke tests
      shell: pwsh